#include<bits/stdc++.h>
using namespace std;

class solution
{
    public:
    int solve (string x, string y)
    {
        int n = x.size();
        int m = y.length();
        int dp[n+1][m+1];
        for (int i = 0 ; i< n+1;i++)
        {
            for (int j = 0 ;j< m+1;j++)
            {
                if(i==0)
                dp[i][j]=0;
                if (j==0)
                dp[i][j]=0;
                
            }
        }
        for (int i = 1; i<n+1; i++)
        {
            for (int j = 1; j< m+1; j++)
            {
                if (x[i-1]==y[j-1])
                {
                    dp[i][j]= 1+dp[i-1][j-1];
                }
                else
                {
                    dp[i][j]= max(dp[i-1][j], dp[i][j-1]);
                }
            }
        }
       int ins= n-dp[n][m];
       int del= m- dp[n][m];
       int ans = ins+del;
       return ans;
    }
};
    int main(){
        int t;
        cin>>t;
        while(t--)
        {
            string s1,s2;
            cin>>s1>>s2;
            solution obj;
            cout<<obj.solve(s1,s2)<<"\n";
        }
        return 0;
    }
